% layout 'default';
% use List::Util qw(sum);
% use Mojo::JSON qw(j);

<script type="text/javascript">
    stats = <%== j($stats) %>;
</script>

<div class="row" ng-app="repoViewer">
  <br>
  %= t h2 => title
  % if (defined $stats) {
      <div id="stats-table"></div>
      <div ng-controller="repoViewController as c">
          <table st-table="c.users">
              <thead>
                  <tr>
                      <th>Author</th>
                      <th>#</th>
                      <th>Subject limited</th>
                      <th>Subject capitalized</th>
                      <th>Subject no period</th>
                      <th>Subject imperative</th>
                      <th>Body used</th>
                      <th>Body separated</th>
                      <th>Body limited</th>
                      <th>Rating</th>
                  </tr>
              </thead>
              <tbody>
                  <tr ng-repeat="user in c.users">
                      <td>{{user.name}}</td>
                      <td>{{user.commits}}</td>
                      <td>{{user.analysis.subject_limit.passed}}</td>
                      <td>{{user.analysis.capitalize_subject.passed}}</td>
                      <td>{{user.analysis.no_period_subject.passed}}</td>
                      <td>{{user.analysis.imperative_subject.passed}}</td>
                      <td>{{user.analysis.body_used.passed}}</td>
                      <td>{{user.analysis.empty_second_line.passed}}</td>
                      <td>{{user.analysis.body_limit.passed}}</td>
                      <td>{{user.rating}}</td>
                  </tr>
              </tbody>
          </table>
      </div>


  % } else {
    The worker is doing its thing. Respect the thing.
    <div id="pbw" class="progress">
      <span id="pb" class="meter custom" style="width: 0%"></span>
    </div>
    <script type="text/javascript">
      var parts = window.location.pathname.split('/');
      var repo = parts[parts.length - 2] + "/" + parts[parts.length - 1];

      function poll() {
        console.log("bump");

        $("#pbw").toggleClass("secondary");
        $("#pb").text("checking");

        $.ajax("/res/repo/" + repo, {
          type: "GET",
          statusCode: {
            200: function(data) {
              console.log("Worker job done. Reloading.");
              console.log(data);
              location.reload();
            },
            202: function(data) {
              var delay = 30000;

              console.log("Worker still busy. Trying again in " + delay + " ms");
              console.log(data);
              setTimeout(poll, delay);

              $("#pbw").toggleClass("secondary");
              $("#pb").css("width", "0%");
              $("#pb").text("waiting");
              $("#pb").animate({width:"100%"}, delay, "linear");
            }
          }
        });
      }
      poll();
    </script>
  % }
</div>
